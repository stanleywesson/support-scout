import{y as j,r as m,m as v}from"./index-DiRwIGBK.js";function p(e){const t=new Date;return t.setDate(t.getDate()-e),t}function F(e){return e?(typeof e=="string"?new Date(e):e).toLocaleDateString(void 0,{weekday:"long",year:"numeric",month:"long",day:"numeric"}):""}const U=["Open","In Progress","Closed"],J=["Low","Medium","High","Urgent"],C=["Stan","Priska","Edward","Fred","Chaldine"],b=[{id:1,title:"UI button is misaligned",description:"The main login button on the home page is off-center on mobile.",status:"Open",isArchived:!1,createdAt:p(1),priority:"Medium",comments:[]},{id:2,title:"API call returns 500 error",description:"The user profile endpoint is crashing when no avatar is set.",status:"In Progress",isArchived:!1,agent:"Stan",createdAt:p(4),priority:"Medium",comments:[]}],I=[...C];let d,l;k();function k(){d=JSON.parse(JSON.stringify(b)),l=[...I]}const M=500;function o(e){return new Promise(t=>{setTimeout(()=>t(e),M)})}const u={reset:()=>(k(),o({})),getTickets:()=>o([...d]),getAgents:()=>o([...l]),addTicket:e=>{const t={...e,id:Math.max(0,...d.map(n=>n.id))+1,isArchived:!1,status:"Open",createdAt:new Date,comments:[]};return d.push(t),o(t)},updateTicketStatus:(e,t)=>{const n=d.find(a=>a.id===e);return n?(n.status=t,t!=="Closed"&&(n.isArchived=!1),o(n)):Promise.reject(new Error("Ticket not found"))},updateTicketPriority:(e,t)=>{const n=d.find(a=>a.id===e);return n?(n.priority=t,o(n)):Promise.reject(new Error("Ticket not found"))},archiveTicket:e=>{const t=d.find(n=>n.id===e);return t&&t.status==="Closed"?(t.isArchived=!0,o(t)):Promise.reject(new Error("Ticket must be closed to be archived"))},assignAgent:(e,t)=>{const n=d.find(a=>a.id===e);return n?(n.agent=t,o(n)):Promise.reject(new Error("Ticket not found"))},addAgent:e=>{const t=e;return l.push(t),o(t)},removeAgent:e=>{const t=l.indexOf(e);if(t!==-1){const n=l.splice(t,1);return o(n[0])}return Promise.reject(new Error("Agent not found"))},addComment:(e,t)=>{const n=d.find(a=>a.id===e);if(n){const a={id:Math.max(0,...n.comments.map(g=>g.id))+1,author:"Anonymous",text:t,createdAt:new Date};return n.comments.push(a),o(n)}return Promise.reject(new Error("Ticket not found"))}},N=j("tickets",()=>{const e=m([]),t=m([]),n=m(!1),a=m(null),g=v(()=>e.value.filter(i=>!i.isArchived)),h=v(()=>e.value.filter(i=>i.isArchived));async function T(){n.value=!0,a.value=null;try{e.value=await u.getTickets()}catch{a.value="Failed to fetch tickets."}finally{n.value=!1}}async function A(){n.value=!0,a.value=null;try{t.value=await u.getAgents()}catch{a.value="Failed to fetch agents."}finally{n.value=!1}}async function w(i){const s=await u.addTicket(i);e.value.push(s)}async function y(i,s){const c=await u.updateTicketStatus(i,s),r=e.value.findIndex(f=>f.id===i);r!==-1&&(e.value[r]={...c})}async function x(i,s){const c=await u.updateTicketPriority(i,s),r=e.value.findIndex(f=>f.id===i);r!==-1&&(e.value[r]={...c})}async function P(i){const s=await u.archiveTicket(i),c=e.value.findIndex(r=>r.id===i);c!==-1&&(e.value[c]={...s})}async function S(i,s){const c=await u.assignAgent(i,s),r=e.value.findIndex(f=>f.id===i);r!==-1&&(e.value[r]={...c})}async function D(i){const s=await u.addAgent(i);t.value.push(s)}async function O(i){await u.removeAgent(i);const s=t.value.indexOf(i);s!==-1&&t.value.splice(s,1)}async function E(i,s){const c=await u.addComment(i,s);if(c){const r=e.value.findIndex(f=>f.id===i);r!==-1&&(e.value[r]=c)}}return{tickets:e,supportAgents:t,loading:n,error:a,fetchAgents:A,fetchTickets:T,addTicket:w,updateTicketStatus:y,activeTickets:g,archivedTickets:h,archiveTicket:P,assignAgent:S,addAgent:D,removeAgent:O,updateTicketPriority:x,addComment:E}});export{J as p,U as s,F as t,N as u};
